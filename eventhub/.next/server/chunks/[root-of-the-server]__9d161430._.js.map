{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/riyac/Documents/WEB2/EventHub-Web4/eventhub/lib/db.tsx"],"sourcesContent":["// lib/db.ts\r\nimport mongoose from 'mongoose';\r\n\r\nconst MONGODB_URI = process.env.MONGODB_URI as string;\r\n\r\nif (!MONGODB_URI) {\r\n  throw new Error('Please define the MONGODB_URI in .env.local');\r\n}\r\n\r\nlet cached = (global as any).mongoose || { conn: null, promise: null };\r\n\r\nexport async function connectToDatabase() {\r\n  if (cached.conn) return cached.conn;\r\n\r\n  if (!cached.promise) {\r\n    cached.promise = mongoose.connect(MONGODB_URI).then((mongoose) => mongoose);\r\n  }\r\n  cached.conn = await cached.promise;\r\n  return cached.conn;\r\n}\r\n"],"names":[],"mappings":"AAAA,YAAY;;;;AACZ;;AAEA,MAAM,cAAc,QAAQ,GAAG,CAAC,WAAW;AAE3C,IAAI,CAAC,aAAa;IAChB,MAAM,IAAI,MAAM;AAClB;AAEA,IAAI,SAAS,AAAC,OAAe,QAAQ,IAAI;IAAE,MAAM;IAAM,SAAS;AAAK;AAE9D,eAAe;IACpB,IAAI,OAAO,IAAI,EAAE,OAAO,OAAO,IAAI;IAEnC,IAAI,CAAC,OAAO,OAAO,EAAE;QACnB,OAAO,OAAO,GAAG,yGAAA,CAAA,UAAQ,CAAC,OAAO,CAAC,aAAa,IAAI,CAAC,CAAC,WAAa;IACpE;IACA,OAAO,IAAI,GAAG,MAAM,OAAO,OAAO;IAClC,OAAO,OAAO,IAAI;AACpB","debugId":null}},
    {"offset": {"line": 51, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/riyac/Documents/WEB2/EventHub-Web4/eventhub/models/event.tsx"],"sourcesContent":["import mongoose from 'mongoose';\r\n\r\nconst eventSchema = new mongoose.Schema({\r\n  title: String,\r\n  description: String,\r\n  date: Date,\r\n  time: String,\r\n  venue: String,\r\n  capacity: Number,\r\n  attendees: [{ type: mongoose.Schema.Types.ObjectId, ref: 'User' }],\r\n  createdBy: { type: mongoose.Schema.Types.ObjectId, ref: 'User' },\r\n  category: { type: mongoose.Schema.Types.ObjectId, ref: 'Category' },\r\n  location: {\r\n    lat: Number,\r\n    lng: Number,\r\n    address: String\r\n  },\r\n  qrCodes: [{\r\n    userId: mongoose.Schema.Types.ObjectId,\r\n    code: String,\r\n    scanned: { type: Boolean, default: false }\r\n  }]\r\n});\r\n\r\nexport default mongoose.models.Event || mongoose.model('Event', eventSchema);\r\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,cAAc,IAAI,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC;IACtC,OAAO;IACP,aAAa;IACb,MAAM;IACN,MAAM;IACN,OAAO;IACP,UAAU;IACV,WAAW;QAAC;YAAE,MAAM,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ;YAAE,KAAK;QAAO;KAAE;IAClE,WAAW;QAAE,MAAM,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ;QAAE,KAAK;IAAO;IAC/D,UAAU;QAAE,MAAM,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ;QAAE,KAAK;IAAW;IAClE,UAAU;QACR,KAAK;QACL,KAAK;QACL,SAAS;IACX;IACA,SAAS;QAAC;YACR,QAAQ,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ;YACtC,MAAM;YACN,SAAS;gBAAE,MAAM;gBAAS,SAAS;YAAM;QAC3C;KAAE;AACJ;uCAEe,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,KAAK,IAAI,yGAAA,CAAA,UAAQ,CAAC,KAAK,CAAC,SAAS","debugId":null}},
    {"offset": {"line": 100, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/riyac/Documents/WEB2/EventHub-Web4/eventhub/pages/api/test-create-event.tsx"],"sourcesContent":["// pages/api/test-create-event.ts\r\nimport type { NextApiRequest, NextApiResponse } from 'next';\r\nimport { connectToDatabase } from '../../lib/db';\r\nimport Event from '../../models/event';\r\n\r\nexport default async function handler(req: NextApiRequest, res: NextApiResponse) {\r\n  await connectToDatabase();\r\n\r\n  try {\r\n    const newEvent = await Event.create({\r\n      title: \"Next.js Hackathon\",\r\n      description: \"Learn and build cool projects.\",\r\n      date: new Date(\"2025-06-15\"),\r\n      time: \"10:00 AM\",\r\n      venue: \"Tech Hub Toronto\",\r\n      capacity: 100,\r\n      location: {\r\n        lat: 43.65107,\r\n        lng: -79.347015,\r\n        address: \"123 Spadina Ave, Toronto\"\r\n      }\r\n    });\r\n\r\n    return res.status(201).json({ message: \"Event created\", event: newEvent });\r\n  } catch (error) {\r\n    return res.status(500).json({ error: (error as Error).message });\r\n  }\r\n}\r\n"],"names":[],"mappings":"AAAA,iCAAiC;;;;AAEjC;AACA;;;AAEe,eAAe,QAAQ,GAAmB,EAAE,GAAoB;IAC7E,MAAM,CAAA,GAAA,mGAAA,CAAA,oBAAiB,AAAD;IAEtB,IAAI;QACF,MAAM,WAAW,MAAM,yGAAA,CAAA,UAAK,CAAC,MAAM,CAAC;YAClC,OAAO;YACP,aAAa;YACb,MAAM,IAAI,KAAK;YACf,MAAM;YACN,OAAO;YACP,UAAU;YACV,UAAU;gBACR,KAAK;gBACL,KAAK,CAAC;gBACN,SAAS;YACX;QACF;QAEA,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;YAAE,SAAS;YAAiB,OAAO;QAAS;IAC1E,EAAE,OAAO,OAAO;QACd,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;YAAE,OAAO,AAAC,MAAgB,OAAO;QAAC;IAChE;AACF","debugId":null}},
    {"offset": {"line": 139, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/riyac/Documents/WEB2/EventHub-Web4/eventhub/node_modules/next/dist/src/server/route-modules/pages-api/module.compiled.js"],"sourcesContent":["if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/pages-api/module.js')\n} else {\n  if (process.env.NODE_ENV === 'development') {\n    if (process.env.TURBOPACK) {\n      module.exports = require('next/dist/compiled/next-server/pages-api-turbo.runtime.dev.js')\n    } else {\n      module.exports = require('next/dist/compiled/next-server/pages-api.runtime.dev.js')\n    }\n  } else {\n    if (process.env.TURBOPACK) {\n      module.exports = require('next/dist/compiled/next-server/pages-api-turbo.runtime.prod.js')\n    } else {\n      module.exports = require('next/dist/compiled/next-server/pages-api.runtime.prod.js')\n    }\n  }\n}\n"],"names":["process","env","NEXT_RUNTIME","module","exports","require","NODE_ENV","TURBOPACK"],"mappings":"AAAA,IAAIA,QAAQC,GAAG,CAACC,YAAY,KAAK,MAAQ;;AAEzC,OAAO;IACL,IAAIF,QAAQC,GAAG,CAACK,QAAQ,KAAK,WAAe;QAC1C,IAAIN,QAAQC,GAAG,CAACM,SAAS,eAAE;YACzBJ,OAAOC,OAAO,GAAGC,QAAQ;QAC3B,OAAO;;QAEP;IACF,OAAO;;IAMP;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 158, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/riyac/Documents/WEB2/EventHub-Web4/eventhub/node_modules/next/dist/src/server/route-kind.ts"],"sourcesContent":["export const enum RouteKind {\n  /**\n   * `PAGES` represents all the React pages that are under `pages/`.\n   */\n  PAGES = 'PAGES',\n  /**\n   * `PAGES_API` represents all the API routes under `pages/api/`.\n   */\n  PAGES_API = 'PAGES_API',\n  /**\n   * `APP_PAGE` represents all the React pages that are under `app/` with the\n   * filename of `page.{j,t}s{,x}`.\n   */\n  APP_PAGE = 'APP_PAGE',\n  /**\n   * `APP_ROUTE` represents all the API routes and metadata routes that are under `app/` with the\n   * filename of `route.{j,t}s{,x}`.\n   */\n  APP_ROUTE = 'APP_ROUTE',\n\n  /**\n   * `IMAGE` represents all the images that are generated by `next/image`.\n   */\n  IMAGE = 'IMAGE',\n}\n"],"names":["RouteKind"],"mappings":";;;AAAO,IAAWA,YAAAA,WAAAA,GAAAA,SAAAA,SAAAA;IAChB;;GAEC,GAAA,SAAA,CAAA,QAAA,GAAA;IAED;;GAEC,GAAA,SAAA,CAAA,YAAA,GAAA;IAED;;;GAGC,GAAA,SAAA,CAAA,WAAA,GAAA;IAED;;;GAGC,GAAA,SAAA,CAAA,YAAA,GAAA;IAGD;;GAEC,GAAA,SAAA,CAAA,QAAA,GAAA;WAtBeA;MAwBjB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 187, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/riyac/Documents/WEB2/EventHub-Web4/eventhub/node_modules/next/dist/src/build/templates/helpers.ts"],"sourcesContent":["/**\n * Hoists a name from a module or promised module.\n *\n * @param module the module to hoist the name from\n * @param name the name to hoist\n * @returns the value on the module (or promised module)\n */\nexport function hoist(module: any, name: string) {\n  // If the name is available in the module, return it.\n  if (name in module) {\n    return module[name]\n  }\n\n  // If a property called `then` exists, assume it's a promise and\n  // return a promise that resolves to the name.\n  if ('then' in module && typeof module.then === 'function') {\n    return module.then((mod: any) => hoist(mod, name))\n  }\n\n  // If we're trying to hoise the default export, and the module is a function,\n  // return the module itself.\n  if (typeof module === 'function' && name === 'default') {\n    return module\n  }\n\n  // Otherwise, return undefined.\n  return undefined\n}\n"],"names":["hoist","module","name","then","mod","undefined"],"mappings":"AAAA;;;;;;CAMC,GACD;;;AAAO,SAASA,MAAMC,MAAW,EAAEC,IAAY;IAC7C,qDAAqD;IACrD,IAAIA,QAAQD,QAAQ;QAClB,OAAOA,MAAM,CAACC,KAAK;IACrB;IAEA,gEAAgE;IAChE,8CAA8C;IAC9C,IAAI,UAAUD,UAAU,OAAOA,OAAOE,IAAI,KAAK,YAAY;QACzD,OAAOF,OAAOE,IAAI,CAAC,CAACC,MAAaJ,MAAMI,KAAKF;IAC9C;IAEA,6EAA6E;IAC7E,4BAA4B;IAC5B,IAAI,OAAOD,WAAW,cAAcC,SAAS,WAAW;QACtD,OAAOD;IACT;IAEA,+BAA+B;IAC/B,OAAOI;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 220, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/riyac/Documents/WEB2/EventHub-Web4/eventhub/node_modules/next/dist/src/build/templates/pages-api.ts"],"sourcesContent":["import { PagesAPIRouteModule } from '../../server/route-modules/pages-api/module.compiled'\nimport { RouteKind } from '../../server/route-kind'\n\nimport { hoist } from './helpers'\n\n// Import the userland code.\nimport * as userland from 'VAR_USERLAND'\n\n// Re-export the handler (should be the default export).\nexport default hoist(userland, 'default')\n\n// Re-export config.\nexport const config = hoist(userland, 'config')\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new PagesAPIRouteModule({\n  definition: {\n    kind: RouteKind.PAGES_API,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n  },\n  userland,\n})\n"],"names":["PagesAPIRouteModule","RouteKind","hoist","userland","config","routeModule","definition","kind","PAGES_API","page","pathname","bundlePath","filename"],"mappings":";;;;;AAAA,SAASA,mBAAmB,QAAQ,uDAAsD;AAC1F,SAASC,SAAS,QAAQ,0BAAyB;AAEnD,SAASC,KAAK,QAAQ,YAAW;AAEjC,4BAA4B;AAC5B,YAAYC,cAAc,eAAc;;;;;yMAGzBD,QAAAA,EAAMC,mIAAU,WAAU;AAGlC,MAAMC,2KAASF,QAAAA,EAAMC,mIAAU,UAAS;AAGxC,MAAME,cAAc,qMAAIL,sBAAAA,CAAoB;IACjDM,YAAY;QACVC,8JAAMN,YAAAA,CAAUO,SAAS;QACzBC,MAAM;QACNC,UAAU;QACV,2CAA2C;QAC3CC,YAAY;QACZC,UAAU;IACZ;cACAT;AACF,GAAE","ignoreList":[0],"debugId":null}}]
}